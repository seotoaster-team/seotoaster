<form action="javascript:;" method="post" data-name="related" id="related-widget-form" class="wmc-block">
    <p>
        <?php echo $this->formLabel('related-rel', $this->translate('Relevance'), array('class' => 'grid_5 alpha mt0-25em')); ?>
        <?php echo $this->formText('relatedRel', Widgets_Related_Related::REL_WORD_COUNT, array('id' => 'related-rel', 'class' => 'grid_7 alpha omega small')); ?>
    </p>
    <p class="mt5px">
        <?php echo $this->formLabel('related-maxres', $this->translate('Max. results'), array('class' => 'grid_5 alpha mt0-25em')); ?>
        <?php echo $this->formText('relatedMaxres', Widgets_Related_Related::REL_MAX_REZULT, array('id' => 'related-maxres', 'class' => 'grid_7 alpha omega small')); ?>
    </p>
    <p class="mt5px">
	    <label class="grid_6 alpha omega pointer">
            <span class="grid_10 alpha omega"><?php echo $this->translate('Use image'); ?></span>
            <?php echo $this->formCheckbox('useImage', 'img', array('id' => 'related-img')); ?>
        </label>
	    <label class="cropped-img hide grid_6 omega pointer">
            <?php echo $this->translate('Cropped'); ?>
            <?php echo $this->formCheckbox('cropped', 'imgc', array('id' => 'related-image-cropped', 'class' => 'crop allowzero')); ?>
        </label>
	</p>
    <div class="mt5px crop-size hide">
        <p class="clearfix">
            <label class="mt0-25em grid_5 alpha"><?php echo $this->translate('Size'); ?></label>
            <?php echo $this->formText('galWidth', null, array('class' => 'gal-width grid_3 alpha omega small', 'placeholder' => $this->translate('Width'))); ?>
            <span class="mt0-25em grid_1 alpha omega text-center">X</span>
            <?php echo $this->formText('galHeight', null, array('class' => 'gal-height grid_3 alpha omega small', 'placeholder' => $this->translate('Height'))); ?>
        </p>
    </div>
    <?php echo $this->formSubmit('applyWidgetRelated', 'Apply', array('class' => 'btn block small ticon-checkmark3')); ?>
</form>
<script type="text/javascript">
    $(function() {
        // Generation widget from form options
        $(document).on('click', '#applyWidgetRelated', function() {
            var error      = false,
                widgetForm = $(this).closest('form'),
                widgetHtml = '{$' + widgetForm.data('name'),
                cropOption = ':imgc';

            widgetForm.find(':input:visible, label:visible>:checkbox').not('[type=hidden], [type=submit]').each(function () {
                if ($(this).hasClass('crop') && $(this).prop('checked')) {
                    widgetHtml = widgetHtml.replace(':img', '');
                    return;
                }

                if ($(this).hasClass('gal-width')) {
                    if ($(this).val()) {
                        cropOption = cropOption+'-'+$(this).val();
                        return;
                    }
                    else {
                        return;
                    }
                }

                if ($(this).hasClass('gal-height')) {
                    if ($(this).val() && cropOption != ':imgc') {
                        widgetHtml += cropOption+'x'+$(this).val();
                        return;
                    }
                    else {
                        widgetHtml += cropOption
                        return;
                    }
                }

                if ($(this).attr('type') == 'checkbox' && !$(this).prop('checked')) {
                    if ($(this).hasClass('allowzero')) {
                        widgetHtml += ':0';
                    }
                    return;
                }

                if ($(this).hasClass('validate')) {
                    if (!$(this).val() || $(this).val() == 0) {
                        $(this).addClass('error');
                        error = true;
                    }
                }

                if (!error) {
                    widgetHtml += ':' + $(this).val();
                }
            });
            if (!error) {
                widgetHtml += '}';
                tinymce.activeEditor.execCommand('mceInsertContent', false, widgetHtml);
            }
        });
    });
</script>